What your app needs to do for the backend:

On startup:

The app needs to communicate with the server. Send a POST request with (for now):
	usertype = 'patient' / 'caretaker'
To /createuser.php
The server will create a user and send back just the userid
You should store the userid locally

If the user is a patient, you should display the userid
If the user is a caretaker, you should give them an option to enter the userid
After entering the patient userid, send another POST request with (for now):
	pid = the user id
To /linkpatient.php

On update:

Patient:

Events:
Send a POST request with:
	pid = stored patient id
To /updateevents.php
The server will return, in the following format, all events with the matching pid:

Datetime EventID Eventtype
...       ....     ....

Now you have all created events

To get the flashcards on an event, you must send a POST request with:
	eid = event id
To /getflashcards.php
The server will return, in the following format, the flash card IDS (not the actual cards) in the following format:

fid
...

Flashcards:
Of course, this is useless without the actual flashcards. However flashcards are expensive (images), so store a local version on you phont
In the server, flash cards will be identified by a unique id. You will send your greatest flashcard id, and the server will give you all 
the flashcards with pid matching your pid and id greater than current.

Send a POST request with:
	pid = patient id
	fid = greatest current flashcard id
To /updateflashcards.php
The server will return:

id other info
..  ........

Store the greatest id you recieve

Caretaker:

Get all your patient ids, update like you would each patient.
Get all patient ids, send a POST request with:
	cid = caretaker id
To /getpatients.php
You will receive all patient ids in the following format:

pid
...


